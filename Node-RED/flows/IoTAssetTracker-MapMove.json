[
    {
        "id": "645bf6a3.4fec68",
        "type": "tab",
        "label": "Track Asset History",
        "disabled": false
    },
    {
        "id": "2078e90e.73153e",
        "type": "inject",
        "z": "645bf6a3.4fec68",
        "name": "Tick every sec",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": ".5",
        "crontab": "",
        "once": true,
        "x": 110,
        "y": 60,
        "wires": [
            [
                "7612837a.38cf1c"
            ]
        ]
    },
    {
        "id": "1fe726da.807bc9",
        "type": "switch",
        "z": "645bf6a3.4fec68",
        "name": "Enable/Disable Map updates",
        "property": "start-stop",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 200,
        "y": 350,
        "wires": [
            [
                "2c8a47e0.13d15"
            ]
        ]
    },
    {
        "id": "7612837a.38cf1c",
        "type": "switch",
        "z": "645bf6a3.4fec68",
        "name": "Tick Asset History Tracker",
        "property": "db-loaded",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "3bef538e.a8fae4"
            ],
            [
                "1fe726da.807bc9",
                "3522709b.fa2c6"
            ]
        ]
    },
    {
        "id": "e2d06f11.36bcb",
        "type": "debug",
        "z": "645bf6a3.4fec68",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 610,
        "y": 390,
        "wires": []
    },
    {
        "id": "2c8a47e0.13d15",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Sort records",
        "func": "var WhichKit=global.get(\"KitNum\");\n// Make certain that an Asset Kit has been selected from the drop down\nif (typeof WhichKit == 'undefined') {\n    return null;\n}\n\nvar AssetHistory = global.get(\"AssetHistory\");\nvar AssetTagLocations = [];\nvar starttime = global.get(\"start-time\");\nvar endtime = global.get(\"end-time\");\n\nif( AssetHistory.length === 0 ) { return null ; }\n\nfor(i = 0; i < AssetHistory.length; i++ ) {\n    if( AssetHistory[i].AssetID == WhichKit ) {\n        // Filter on the selected timestamp range\n        if( (AssetHistory[i].timestamp > starttime) && (AssetHistory[i].timestamp < endtime)) {\n            AssetTagLocations.push(AssetHistory[i]);  // Onion GPS timestamp has 10 digit precision\n        }\n    }\n}\n\n// Sort by timestamp\nAssetTagLocations.sort(function(x,y) {\n    return x.timestamp - y.timestamp;\n});\n\n// Query the counter, or 0 the first loop through...\nvar current_location = global.get(\"location\")||0;\ncurrent_location+=1;\nif( current_location == AssetTagLocations.length) {\n    current_location = 0;\n}\nglobal.set(\"location\",current_location);\n\n//msg.payload = AssetTagLocations[current_location].gps;\n//msg.payload.timestamp = AssetTagLocations[current_location].timestamp;\nmsg.payload = AssetTagLocations[current_location];\nreturn msg ;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 350,
        "wires": [
            [
                "e2d06f11.36bcb",
                "b6da26ca.9a1",
                "de82ff1c.b1d048"
            ]
        ]
    },
    {
        "id": "bcd68250.b12dd",
        "type": "worldmap",
        "z": "645bf6a3.4fec68",
        "name": "Update Asset Location on Map",
        "lat": "40.973359599999995",
        "lon": "-74.09271869999999",
        "zoom": "15",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "panit": "true",
        "x": 1160,
        "y": 350,
        "wires": []
    },
    {
        "id": "9d2b62e0.9754a",
        "type": "comment",
        "z": "645bf6a3.4fec68",
        "name": "Find Location Records for a particular asset / date range",
        "info": "",
        "x": 300,
        "y": 390,
        "wires": []
    },
    {
        "id": "3522709b.fa2c6",
        "type": "switch",
        "z": "645bf6a3.4fec68",
        "name": "Zoom to last location",
        "property": "zoom",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 480,
        "y": 140,
        "wires": [
            [
                "5b8ff7e.4f2c008"
            ]
        ]
    },
    {
        "id": "5b8ff7e.4f2c008",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Zoom to last location",
        "func": "if ( global.get(\"ZoomedAlready\")) {\n    return null;\n}\n\nvar WhichKit=global.get(\"KitNum\");\n// No Asset Kit has been selected\nif (typeof WhichKit == 'undefined') {\n    return null;\n}\n\nvar AssetHistory = global.get(\"AssetHistory\");\n// find the last recorded timestamp for an Asset\nvar lastRecord= {lat:0, lon:0, timestamp:0};\nfor(i = 0; i < AssetHistory.length; i++ ) {\n    if( AssetHistory[i].AssetID == WhichKit ) {\n        if( lastRecord.timestamp < AssetHistory[i].timestamp ) {\n            lastRecord.timestamp = AssetHistory[i].timestamp ;\n            lastRecord.lat = AssetHistory[i].gps.lat;\n            lastRecord.lon = AssetHistory[i].gps.lon;\n        }\n    }\n}\n\n// Move Map icon to its last reported location \nvar home = {\n    name       : \"Particle Electron\", \n    AssetTag   : global.get(\"KitNum\"),\n    lat        : lastRecord.lat,\n    lon        : lastRecord.lon,\n    icon       : \"hostile\",  //\"briefcase\" // from http://fontawesome.io/icons/\n    iconColor  : \"blue\",\n//    LastSeen   : new Date(lastRecord.timestamp),   // Cloudant\n    LastSeen   : lastRecord.timestamp,               // Blockchain\n    AssetOwner : \"John Walicki\",\n    // Recenter and zoom to the last location of this AssetTag\n    command    : { zoom:11, addtoheatmap:true, autopan:true }\n};\nmsg.payload = home;\n\nmsg.loop = 0;  \nglobal.set(\"ZoomedAlready\", true);\nreturn msg ;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 140,
        "wires": [
            [
                "8350dafe.2cadf"
            ]
        ]
    },
    {
        "id": "8350dafe.2cadf",
        "type": "delay",
        "z": "645bf6a3.4fec68",
        "name": "Zoom Slowly",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 920,
        "y": 140,
        "wires": [
            [
                "1a08b261.502156"
            ]
        ]
    },
    {
        "id": "bb5479f2.c51e7",
        "type": "debug",
        "z": "645bf6a3.4fec68",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1100,
        "y": 220,
        "wires": []
    },
    {
        "id": "b6da26ca.9a1",
        "type": "link out",
        "z": "645bf6a3.4fec68",
        "name": "",
        "links": [
            "f9307331.450c6"
        ],
        "x": 555,
        "y": 310,
        "wires": []
    },
    {
        "id": "f3aa3024.da15a",
        "type": "link in",
        "z": "645bf6a3.4fec68",
        "name": "GeoFence In",
        "links": [
            "f0297295.998688",
            "7922936a.e4605c",
            "d677d460.64a008",
            "aa2fc296.e6f4d"
        ],
        "x": 935,
        "y": 290,
        "wires": [
            [
                "bcd68250.b12dd"
            ]
        ]
    },
    {
        "id": "de82ff1c.b1d048",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Move Asset",
        "func": "// Track AssetTag around a Map\n// Set all of the common attributes\nvar asset = {\n        name       : \"Particle Electron\", \n        AssetTag   : global.get(\"KitNum\"),\n        lat        : msg.payload.gps.lat,\n        lon        : msg.payload.gps.lon,\n        icon       : \"fa-medkit\",\n        iconColor  : \"blue\",\n        LastSeen   : new Date(msg.payload.timestamp),\n        AssetOwner : \"John Walicki\",\n        // Recenter and zoom if there is a new AssetTag selected\n        command    : { zoom:10, autopan:true }\n    };\n    \n// Is this a Temperature record \nif( typeof msg.payload.temperature != 'undefined' ) {\n    asset.temperature = msg.payload.temperature ;\n    // Look for the max temp and flash the medkit RED\n    if (  msg.payload.temperature > 10 ) {\n        asset.iconColor = \"red\";\n    }\n}\n\n// Is this a Accelerometer record\nif( typeof msg.payload.accel != 'undefined' ) {\n    // The Particle Electron has its own threshold filter\n    // Max vibration has been triggered\n    // Flash the medkit RED\n    asset.vibration = \"X:\"+msg.payload.accel.acc_x +\" Y:\"+msg.payload.accel.acc_y+\" Z:\"+msg.payload.accel.acc_z;\n    asset.iconColor = \"red\";\n}\n\nmsg.payload = asset;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 350,
        "wires": [
            [
                "bcd68250.b12dd",
                "85d5b089.2c78b",
                "f7d78dcc.af7c1"
            ]
        ]
    },
    {
        "id": "1a08b261.502156",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Zoom In",
        "func": "zoomlevel = 10 + msg.loop;\n\n// Recenter and zoom to the last location of this AssetTag\nmsg.payload.command.zoom = zoomlevel;\n\nif( msg.loop < 10 ) {\n    msg.loop = msg.loop + 1;\n\treturn [msg,msg];\n} else {\n\treturn [msg,null];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 910,
        "y": 220,
        "wires": [
            [
                "bcd68250.b12dd",
                "bb5479f2.c51e7"
            ],
            [
                "8350dafe.2cadf"
            ]
        ]
    },
    {
        "id": "85d5b089.2c78b",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Extreme Environmental Pins",
        "func": "var ShowEnvironmentalPins = global.get(\"ShowEnvironmentalPins\") || false;\nif( ShowEnvironmentalPins === false ) {\n    return null;\n}\n\nvar d = new Date(msg.payload.timestamp);\n\nif( typeof msg.payload.temperature != 'undefined' ) {\n    // Look for the max temp and flash the medkit RED\n    if (  msg.payload.temperature > 10 ) {\n        var count = context.get('count') || 0;\n        count += 1;\n        context.set('count',count);\n        msg.payload = { \n                name        : \"Medical Supplies exposed to extreme temp #\"+count,\n                AssetTag    : global.get(\"KitNum\"),\n                lat         : msg.payload.lat,\n                lon         : msg.payload.lon,\n                icon        : \"fa-thermometer-full\",\n                temperature : msg.payload.temperature,\n                iconColor   : \"red\",\n                layer       : \"threshold\",\n                EventOccurence : d,\n                AssetOwner  : \"John Walicki\",\n                command     : { zoom : 13, autopan : true }\n            };\n        return msg;\n    }\n}\n\nif( typeof msg.payload.vibration != 'undefined') {\n    var vcount = context.get('vcount') || 0;\n    vcount += 1;\n    context.set('vcount',vcount);\n    msg.payload = { \n            name        : \"Medical Supplies exposed to extreme vibrations #\"+vcount,\n            AssetTag    : global.get(\"KitNum\"),\n            lat         : msg.payload.lat,\n            lon         : msg.payload.lon,\n            icon        : \"fa-bullseye\",\n            vibration   : msg.payload.vibration,\n            iconColor   : \"red\",\n            layer       : \"threshold\",\n            EventOccurence : d,\n            AssetOwner  : \"John Walicki\",\n            command     : { zoom : 13, autopan : true }\n        };\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 390,
        "wires": [
            [
                "bcd68250.b12dd",
                "2a645d9.19ce422"
            ]
        ]
    },
    {
        "id": "3bef538e.a8fae4",
        "type": "link out",
        "z": "645bf6a3.4fec68",
        "name": "Track Assets",
        "links": [
            "98619ac8.34d468"
        ],
        "x": 405,
        "y": 80,
        "wires": []
    },
    {
        "id": "f7d78dcc.af7c1",
        "type": "debug",
        "z": "645bf6a3.4fec68",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 810,
        "y": 330,
        "wires": []
    },
    {
        "id": "2a645d9.19ce422",
        "type": "debug",
        "z": "645bf6a3.4fec68",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1095,
        "y": 420,
        "wires": []
    }
]
